{"version":3,"sources":["components/Header.js","context/AppReducer.js","context/GlobalState.js","components/Balance.js","components/IncomeExpenses.js","components/Transaction.js","components/TransactionList.js","components/AddTransaction.js","App.js","index.js"],"names":["Header","state","action","type","transactions","filter","transaction","id","payload","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","deleteTransaction","addTransaction","Balance","total","useContext","map","amount","reduce","acc","item","toFixed","IncomeExpenses","amounts","income","expense","className","Math","abs","Transaction","sign","text","onClick","TransactionList","AddTransaction","useState","setText","setAmount","onSubmit","e","preventDefault","newTransaction","floor","random","htmlFor","onChange","target","placeholder","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e2a0c793.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <h2>\r\n            Expense Record\r\n        </h2>\r\n    )\r\n}\r\n","export default (state, action) => {\r\n    switch(action.type) {\r\n        case 'DELETE_TRANSACTION':\r\n            return {\r\n                ...state,\r\n                transactions: state.transactions\r\n                .filter(transaction => transaction.id !== action.payload)\r\n            }\r\n            case 'ADD_TRANSACTION':\r\n            return {\r\n                ...state,\r\n                transactions: [action.payload,...state.transactions]\r\n             \r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import React,{createContext, useReducer} from 'react';\r\nimport AppReducer from './AppReducer';\r\n\r\n//initial state\r\nconst initialState  =  {\r\n    transactions: [] \r\n    \r\n}\r\n\r\n//Create context\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n//Provider component\r\nexport const GlobalProvider = ({children}) => {\r\nconst [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n// Actions\r\nfunction deleteTransaction(id) {\r\n    dispatch({\r\n        type: 'DELETE_TRANSACTION',\r\n        payload: id\r\n    });\r\n}\r\n\r\nfunction addTransaction(transaction) {\r\n    dispatch({\r\n        type: 'ADD_TRANSACTION',\r\n        payload: transaction\r\n    });\r\n}\r\n\r\nreturn <GlobalContext.Provider value={{\r\n    transactions: state.transactions,\r\n    deleteTransaction,\r\n    addTransaction\r\n}}>\r\n    {children}\r\n</GlobalContext.Provider>\r\n\r\n}","import React,{useContext} from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nexport const Balance = () => {\r\n    const {transactions} = useContext(GlobalContext);\r\n\r\n    const amounts = transactions.map(transaction => transaction.amount);\r\n  \r\n    const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\r\n    return (\r\n        <div>\r\n            <h4>Your Balance</h4>\r\n            <h1>₹{total}</h1>\r\n        </div>\r\n    )\r\n}\r\n","import React,{useContext} from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nexport const IncomeExpenses = () => {\r\n    const {transactions} = useContext(GlobalContext);\r\n\r\n    const amounts = transactions.map(transaction => transaction.amount);\r\n\r\n    const income = amounts\r\n    .filter(item => item > 0)\r\n    .reduce((acc,item) => (acc += item),0)\r\n    .toFixed(2);\r\n\r\n    const expense = amounts\r\n    .filter(item => item < 0)\r\n    .reduce((acc,item) => (acc += item),0)\r\n    .toFixed(2);\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"inc-exp-container\">\r\n            <div>\r\n                <h4>Income</h4>\r\n                <p className=\"money plus\">+₹{income}</p>\r\n\r\n            </div>\r\n            <div>\r\n                <h4>Expense</h4>\r\n                <p  className=\"money minus\">-₹{Math.abs(expense)}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React,{useContext} from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nexport const Transaction = ({transaction}) => {\r\n   const {deleteTransaction} = useContext(GlobalContext);\r\n\r\n    const sign = transaction.amount < 0 ? '-' : '+';\r\n    return (\r\n        <li className={transaction.amount <0 ? 'minus' : 'plus'}>\r\n                     {transaction.text} <span>{sign}₹{Math.abs(transaction.amount)}</span>\r\n                     <button onClick={() => deleteTransaction(transaction.id)} className=\"delete-btn\">X</button>\r\n                 </li>\r\n    )\r\n}\r\n","import React,{useContext} from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\nimport { Transaction } from './Transaction';\r\n\r\nexport const TransactionList = () => {\r\n    const {transactions} = useContext(GlobalContext);\r\n\r\n  \r\n\r\n    return (\r\n        <div>\r\n            <h3>History</h3>\r\n            <ul className=\"list\">\r\n                {transactions.map( transaction => (\r\n                    <Transaction key ={transaction.id} transaction={transaction}/>\r\n                ))}\r\n               \r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n","import React,{useState,useContext} from 'react'\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nexport const AddTransaction = () => {\r\n\r\n    const [text, setText] = useState('');\r\n    const [amount, setAmount]  = useState(0);\r\n    const {addTransaction} = useContext(GlobalContext);\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        const newTransaction = {\r\n            id: Math.floor(Math.random() * 100000000),\r\n            text,\r\n            amount: +amount\r\n        }\r\n\r\n        addTransaction(newTransaction);\r\n\r\n    }\r\n    return (\r\n        <div>\r\n            <h3>Add new transaction</h3>\r\n            <form onSubmit={onSubmit}>\r\n                <div>\r\n                    <label  htmlFor=\"text\">Text</label>\r\n                    <input type=\"text\" value={text} onChange={(e) => setText(e.target.value)} placeholder=\"Enter text...\"/>\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"amount\">Amount\r\n                        <br/>\r\n                    (negative -expense, positive - income)\r\n                    </label>\r\n                    <input type=\"number\" value={amount} onChange={(e) => setAmount(e.target.value)}  placeholder=\"Enter amount...\"/>\r\n                </div>\r\n                <button className=\"btn\">Add transaction</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import {Header} from './components/Header';\nimport {Balance} from './components/Balance';\nimport { IncomeExpenses } from './components/IncomeExpenses';\nimport {TransactionList} from './components/TransactionList';\nimport {AddTransaction} from './components/AddTransaction';\nimport './App.css';\n\nimport { GlobalProvider} from './context/GlobalState';\n\nfunction App() {\n  return (\n    <GlobalProvider>\n    <Header/>\n    <div className=\"container\">\n      <Balance/>\n      <IncomeExpenses/>\n      <TransactionList/>\n      <AddTransaction/>\n    </div>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}